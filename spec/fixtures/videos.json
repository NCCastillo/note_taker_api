[{"id":3236,"title":"Error Handling in Node.js","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/003/236/Jamund_ferguson-original.png?1422383440","slug":"mwjs2014-error-handling-in-node-js","recorded_at":"2014-03-18T20:00:00.000Z","event":"MountainWest JavaScript 2014","rating":"Everyone","abstract":"At PayPal I’m working with a lot of people who are new to node.js. A big issue my team has run into is how to sanely handle errors in node./express. I want to talk about some common (and maybe some less common) ways to handle errors across the stack. We’ll look at patterns for dealing with synchronous and asynchronous errors and talk about when and where they’re appropriate. Mostly this will be about JavaScript, but we’ll touch a bit on logging and other aspects of error handling as well.\r\nLots of code. Lots of real life examples. Should be useful to anyone working with a large team on a large node code base.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"p-2fzgfk9AA","views":1031,"views_last_7":3,"views_last_30":5,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jamund","last_name":"Ferguson","aka_name":null,"twitter_handle":"xjamundx"}]},{"id":1071,"title":"Therapeutic Refactoring","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/001/071/1071-cascadiaruby2012-therapeutic-refactoring-thumb_0002-original.png?1422313003","slug":"cascadiaruby2012-therapeutic-refactoring","recorded_at":"2012-08-03T19:45:00.000Z","event":"Cascadia Ruby 2012","rating":"Everyone","abstract":"Enter deadline center stage, exit best practices, quietly, rear stage left.\r\n\r\nThe results are rarely pretty.\r\n\r\nRefactoring can pry panic’s fingers away from your poor, overburdened adrenal glands and restore your sanity. Not that it went missing, of course. Never that!\r\n\r\nThis talk will cover the two reasons why refactoring works as well as (or better than) whiskey, sky diving, and massages as therapy, explore a handful of effective strategies to ensure that the rubber meets the road, and contains gory before shots and slick after shots of ruby code that has served therapeutic purpose.","post_date":"2012-08-17T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"J4dlF0kcThQ","views":14003,"views_last_7":74,"views_last_30":377,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Katrina","last_name":"Owen","aka_name":"","twitter_handle":"kytrinyx"}]},{"id":3042,"title":"SOLID principles through tests","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/003/042/sebastian-original.png?1422339662","slug":"larubyconf2014-solid-principles-through-tests","recorded_at":"2014-02-08T16:10:00.000Z","event":"LA Ruby Conference 2014","rating":"Everyone","abstract":"We care about writing quality code, we have read the definition of SOLID principles several times and we know how important they are for writing good OO code, but are we really following those principles? Is there a pragmatic way of following them in our day to day jobs or are they just some principles a few computer scientists wrote? Fortunately there is, SOLID principles are not just good ideas , they are intended to help us write better code, enjoy our jobs more and be happy programmers. But, where should we start? We should start where we always do. By writing tests, yes, for real. As Kent Beck says \"TDD doesn't drive good design. TDD gives you immediate feedback about what is likely to be bad design\", so we need to go a step further. In this talk we will see how writing tests is not just *doing TDD* is about having good test coverage, it's also about driving our code towards good design, one that follows SOLID principles.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"_4j0Bh-Qtrc","views":1563,"views_last_7":7,"views_last_30":28,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Sebastian","last_name":"Sogamoso","aka_name":null,"twitter_handle":"sebasoga"}]},{"id":4946,"title":"Joe Loveless (Neustar) Interview","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/946/Screenshot_2014-12-17_at_10.22.49_PM-original.png?1422377441","slug":"velocityconfsantaclara2014-joe-loveless-neustar-interview","recorded_at":"2014-06-26T19:30:00.000Z","event":"Velocity Conference Santa Clara 2014 ","rating":"Everyone","abstract":"Joe Loveless, Market Manager for Neustar, discusses \"performance theft,\" multi-cloud load testing, and strategies to make the most of mobile users, at the 2014 Velocity Conference in Santa Clara.\r\n","post_date":"2014-12-17T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"ZHFhiBZFvv4","views":35,"views_last_7":0,"views_last_30":0,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Joseph","last_name":"Loveless","aka_name":null,"twitter_handle":null}]},{"id":4923,"title":"Wednesday Lightning Demos","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/923/Screenshot_2014-12-17_at_3.37.50_PM-original.png?1422377355","slug":"velocityconfsantaclara2014-wednesday-lightning-demos","recorded_at":"2014-06-24T18:00:00.000Z","event":"Velocity Conference Santa Clara 2014 ","rating":"Everyone","abstract":"Responsive Web Design (RWD) is now a well-established technique yet it's adoption is still surprisingly low. Often when responsive sites are designed the approach is primarily from a visual design perspective and teams struggle with the complexity of changing design and navigation patterns let alone any performance concerns.\r\n\r\nWe'll survey a wide number of responsive sites and visualize how well optimized they are for different device viewports and identify common issues and the techniques being used to improve performance.\r\n\r\nThe impact of specific responsive techniques (responsive images, inlining CSS/JS, conditional loading. Etc.) on improving performance will be examined through case studies including The Guardian, newzealand.com and others.\r\n\r\nYou'll walk away with insight into which techniques had the greatest impact on performance as teams redesigned and transformed their websites into responsive multi-device capable sites.\r\n\r\nAbout Mark Zeman (SpeedCurve):\r\nMark Zeman is a Creative Director at Digital Arts by day and Founder at SpeedCurve by night.\r\n","post_date":"2014-12-17T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"3Lhwso2GaN0","views":56,"views_last_7":0,"views_last_30":0,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Mark","last_name":"Zeman","aka_name":"","twitter_handle":""}]},{"id":2566,"title":"Split In Between","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/002/566/__RubyConf_India_2013_Graph_Databases_-_When_crunching_numbers_is_just_not_enough_by_NikhilVallishayee_-_YouTube-original.png?1422325741","slug":"rubyconfindia2013-split-in-between","recorded_at":"2013-07-22T20:10:00.000Z","event":"RubyConf India 2013","rating":"Everyone","abstract":"We are all building products - web products , ours or other's; or dreaming about it. And Rails, Agile and Sound OO design makes that simple. As simple as following well laid out instructions ( assuming off course, that a viable idea has first come out of *somewhere* and has *someone* chasing it).\r\n\r\nWhat I intend to do with this talk is to ponder, publicly, on the consequences of introducing a simple design decision while going about *initial* brick laying - splitting the product into separate API and front_end processes from the very start; and consider the tech and biz consequences of this over time.\r\n\r\nDuh. An API sounds very elementary; especially if your product is designed to have multiple front_ends spanning the web and mobiles. I would still think this an open topic and an excellent way of spending 25,000 minutes of collective time and here's why:\r\n\r\n* I saw this decision taken on a project when it was spawned on which I ended up spending 3 years (and foreseebly another 5 years) on and have been wondering why ever since.\r\n\r\n* Over the years, I have alternatively defended and opposed this design principle on grounds of - business scalability, over engineering, maintenance costs\r\n\r\n* I have effectively used this design decision to generate drastic business viability in terms of: branding A/B, product pruning and A/B testing, 3rd party vendoring of front_end apps, localization and internationalization\r\n\r\n* I have seen the technical consequences of this action play out: initial engineering overhead, cost bonus on front_end revamps, modularity and malleability of core business logic, offshore_ability of front_end modules\r\n\r\nI aim to keep the talk lighthearted and with brevity in mind, intend to run through the core idea of a split, common rants, the trade-offs and consequences, business scalability and viability that this achieves, technical and maintainability consequences, ActiveResource and it's limitations, and my vision of the ideal JSONified almost_RESTful API approach.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"YuPP1JmbR-A","views":624,"views_last_7":0,"views_last_30":1,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Nikhil","last_name":"Vallishayee","aka_name":null,"twitter_handle":null}]},{"id":3757,"title":"Creative Machines","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/003/757/work-original.jpg?1422370090","slug":"railsberry2013-creative-machines","recorded_at":"2013-02-23T00:30:00.000Z","event":"railsberry 2013","rating":"Everyone","abstract":"Alan Turing set out to find the answer to the question: \"Can machines think?\". Thinking, that's easy! Even my dishwasher can do that (it's a really smart dishwasher). How about we try something harder and push into a new area of AI: \"Can machines be creative?\". We will put forward a new Creative Machine test and thats were you all get to participate (participation mandatory). Can you distinguish between a machine's creative attempts and a humans? Along our journey down the path of discovering a new generation of artists, born through Ruby, we will look into the heart of each machine-artist. Examining different algorithms/techniques and their effectiveness at exhibiting creativeness. Also how slowly killing a neural network lead to some of the greatest progress in creative machines.","post_date":"2014-06-11T06:00:00.000Z","announce_date":null,"host":"vimeo","embed_code":"68755532","views":181,"views_last_7":1,"views_last_30":1,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Joseph","last_name":"Wilk","aka_name":null,"twitter_handle":"josephwilk"}]},{"id":3413,"title":"The Future of Computer Vision: How Two Rubyists Are Changing the World","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/003/413/Ruby_on_Ales_2014_-_The_Future_of_Computer_Vision__How_Two_Rubyists_Are_Changing_The_World_-_YouTube-original.png?1422368707","slug":"roa2014-the-future-of-computer-vision-how-two-rubyists-are-changing-the-world","recorded_at":"2014-03-07T17:50:00.000Z","event":"Ruby On Ales 2014","rating":"Everyone","abstract":"It all started with a dream. A dream of a world where people have learned to live in harmony with nature, where war is a distant memory, where humankind reaches unimaginable heights of technological innovation and Magic: The Gathering players no longer need to sort their cards by hand. This presentation will describe in detail the life-changing technological leaps that led us to this collectible card game utopia, examining the scanning, recognition and sorting of small bits of cardboard and all the Ruby that allows the magic to happen. If you've ever dreamed of being able to live your planeswalking dreams without the requisite hours of collating your cardboard collection, this is the presentation for you.","post_date":"2014-05-11T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"ODTwPM_4pOI","views":1330,"views_last_7":5,"views_last_30":19,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Aaron","last_name":"Patterson","aka_name":"","twitter_handle":"tenderlove"},{"first_name":"Jonan","last_name":"Scheffler","aka_name":"","twitter_handle":"1337807"}]},{"id":5182,"title":"Bring Sanity to Frontend Infrastructure with Ember","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/182/vlcsnap-2015-03-09-08h43m01s50-original.png?1425916503","slug":"emberconf2015-bring-sanity-to-frontend-infrastructure-with-ember","recorded_at":"2015-03-03T16:00:00.000Z","event":"Ember Conf 2015","rating":"Everyone","abstract":"Monolithic server-side applications are on the way out - but what does this mean for our frontend code? A world of independent backend services creates unique challenges for internal frontend development: How can teams share code? Streamline deployments? Test and integrate their code with existing backend systems?\r\n\r\nThis talk will discuss how Ember's conventions and tooling can bring consistency, discipline and sanity to a company's frontend infrastructure.","post_date":"2015-03-09T08:54:00.000Z","announce_date":"2015-03-09T16:42:26.281Z","host":"youtube","embed_code":"iwPsNTkyCcA","views":83,"views_last_7":14,"views_last_30":98,"license":"cc-by-sa-3.0","attribution":"","presenters":[{"first_name":"Sam ","last_name":"Selikoff ","aka_name":"","twitter_handle":""}]},{"id":649,"title":"Failing Fast - Stuff We Should have Done Better at Square","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/000/649/vlcsnap-2011-10-16-02h10m18s126-original.png?1422311409","slug":"gogaruco2011-failing-fast-stuff-we-should-have-done-better-at-square","recorded_at":"2011-09-17T19:00:00.000Z","event":"Golden Gate Ruby Conference 2011","rating":"Everyone","abstract":"I work for a mobile payments company called Square. Square has a great development culture driven by a lot of smart people. Part of that culture includes acknowledging failures, figuring out what should have been done differently when failures occur, and learning how to fail less in the future.\r\n\r\nI'm going to discuss the mistakes made when developing a major Rails app feature, the struggle to increase test coverage for the Square iOS client, and the consequences of bad architectural decisions made when creating a distributed build system. I'll then talk about how each of these were addressed.","post_date":"2011-10-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"none","views":2092,"views_last_7":7,"views_last_30":20,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Erica","last_name":"Kwan","aka_name":null,"twitter_handle":""}]},{"id":659,"title":"Why You Don't Get Mock Objects ","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/000/659/659-rubyconf2011-why-you-don-t-get-mock-objects-thumb_0002-original.png?1422311465","slug":"rubyconf2011-why-you-don-t-get-mock-objects","recorded_at":"2011-09-29T18:15:00.000Z","event":"Ruby Conference 2011","rating":"Everyone","abstract":"Although the Ruby community has embraced TDD like no other community ever has, we have always looked at mock objects with disdain, and perhaps even a little hatred. I've heard conference speakers call them \"Wastes of time\", \"Scams\", and even \"Testing Heresies\". Why would anyone have ever developed these pieces of junk? In reality though many in the agile community have embraced mock objects within their testing cycles because they have found using these fake objects improves the design of their systems. But why not Rubyists? Most Rubyists don't get mock objects because they don't understand their history or their ","post_date":"2011-10-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"none","views":9434,"views_last_7":49,"views_last_30":181,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Gregory","last_name":"Moeck","aka_name":null,"twitter_handle":""}]},{"id":175,"title":"Towards a Ruby compiler","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/000/175/20-nov-2009-09-30-towards-a-ruby-compiler-caleb-clausen-preview-original.png?1422308743","slug":"rubyconf2009-towards-a-ruby-compiler","recorded_at":"2009-11-20T17:30:00.000Z","event":"Ruby Conference 2009","rating":"Not yet Rated","abstract":"","post_date":"2010-09-10T02:37:00.000Z","announce_date":null,"host":"youtube","embed_code":"w_qEbx7UDUI","views":1134,"views_last_7":4,"views_last_30":16,"license":"cc-by-sa-3.0","attribution":"","presenters":[{"first_name":"Caleb","last_name":"Clausen","aka_name":"","twitter_handle":""}]}]
