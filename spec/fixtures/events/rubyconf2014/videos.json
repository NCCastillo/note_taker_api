[{"id":5078,"title":"Rubyists, have a sip of Elixir!","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/078/vlcsnap-2014-12-23-08h20m20s27-original.png?1422378305","slug":"rubyconf2014-rubyists-have-a-sip-of-elixir","recorded_at":"2014-11-18T22:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"This talk is about Elixir – a functional, meta-programming aware language built on top of the Erlang VM.\r\n\r\nI introduce some of Elixir's more interesting language features. Then I will demonstrate some of the features that Erlang gives Elixir for free, such as the OTP framework, that let's you build fault tolerant and distributed systems.\r\n\r\nSo come along and join me to experience programming joy.","post_date":"2014-12-23T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"0Ui-Vy2wYwo","views":4148,"views_last_7":22,"views_last_30":116,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Benjamin","last_name":"Tan","aka_name":null,"twitter_handle":"bentanweihao"}]},{"id":4822,"title":"Epic Intro Music: BLE Beacons and Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/822/christopher-sexton-original.png?1422376631","slug":"rubyconf2014-epic-intro-music-ble-beacons-and-ruby","recorded_at":"2014-11-17T18:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Would you like to stroll into the office to your own dramatic theme music? We can arrive in style with an epic score. Learn how to use RubyMotion, a Raspberry Pi and iBeacon Technology to play the Imperial March when the CEO walks in.\r\n\r\nThe ability for mobile devices to detect their proximity to beacons is relatively new. We will learn how they work, the common gotchas, and how to integrate with a bigger system.\r\n\r\nLet's build something fun with Ruby and Beacons. Plus, who doesn't want an awesome theme song?","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"teTpPCwdh7g","views":2511,"views_last_7":12,"views_last_30":46,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Christopher","last_name":"Sexton","aka_name":null,"twitter_handle":"crsexton"}]},{"id":4819,"title":"Sauron: DIY Home Security with Ruby!","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/819/jonan-scheffler-original.png?1422376575","slug":"rubyconf2014-sauron-diy-home-security-with-ruby","recorded_at":"2014-11-18T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"This is the story of how I built an all-seeing eye with Ruby, and how I use it to defend the sanctity of my suburban home.\r\n\r\nUsing a Raspberry Pi and some homemade motion detection software I've developed a home security system that can send me notifications on my phone and photograph intruders. It uses perceptual hashes to detect image changes and archives anything unusual. I can even set a custom alerting threshold and graph disturbances over time.\r\n\r\nIf you've ever had the desire to be an evil wizard with a glowing fireball of an eye this talk is perfect for you. Come play with Sauron.","post_date":"2014-12-03T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"IIBM1Zxr66c","views":1344,"views_last_7":2,"views_last_30":26,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jonan","last_name":"Scheffler","aka_name":"","twitter_handle":"1337807"}]},{"id":4832,"title":"Build the Unified Logging Layer with Fluentd and Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/832/kiyoto_tamura-original.png?1422376793","slug":"rubyconf2014-build-the-unified-logging-layer-with-fluentd-and-ruby","recorded_at":"2014-11-17T22:00:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"As software becomes less monolithic and more service-oriented, log collection becomes a real problem. How can we stop hacking together brittle log parsing scripts and start building a unified logging layer?\r\n\r\nFluentd is a data collector written in Ruby to solve this problem. Unlike other log management tools that are designed for a single backend system, Fluentd aims to connect many input sources into several output systems.\r\n\r\nThis talk surveys Fluentd's architecture and shows real-world use cases of how different users extend it to do more with their logs with less code.","post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"sIVGsQgMHIo","views":1435,"views_last_7":2,"views_last_30":27,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Kiyoto","last_name":"Tamura","aka_name":null,"twitter_handle":"kiyototamura"}]},{"id":5073,"title":" Kids, Ruby, Fun!: Introduction of the Smalruby and the Ruby Programming Shounendan","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/073/kouji_takao-original.png?1422375252","slug":"rubyconf2014-kids-ruby-fun-introduction-of-the-smalruby-and-the-ruby-programming-shounendan","recorded_at":"2014-11-19T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"We will explain the introduction of the Smalruby and the Ruby Programming Shounendan, For more information about the implementation of the smalruby-editor of the Ruby programming visual editor.","post_date":"2014-12-23T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"c2P_8QURz1g","views":374,"views_last_7":4,"views_last_30":15,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Kouji","last_name":"Takao","aka_name":null,"twitter_handle":"takaokouji"}]},{"id":5016,"title":"Writing mruby Debugger","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/016/yurie_yamane-original.png?1422377908","slug":"rubyconf2014-writing-mruby-debugger","recorded_at":"2014-11-18T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"mruby forum released mruby 1.0.0 in Feb. 2014. It's been stable to use. However, because mruby is used on small boards or in application programs, it's hard to debug mruby applications. When we develop mruby application, we should write not only Ruby code, but also C code. So we need to debug both codes. To make debugging mruby application easier, we are writing prototype of mruby debugger. Current mruby distribution has no debugger, but there are some useful API sets to implement own debugger. In this talk, we introduce their API and how to use them to write a debugger.","post_date":"2014-12-19T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"VXQYSa2jjLw","views":468,"views_last_7":1,"views_last_30":10,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Masayoshi","last_name":"Takahashi","aka_name":null,"twitter_handle":"takahashim"},{"first_name":"Yurie","last_name":"Yamane","aka_name":null,"twitter_handle":null}]},{"id":5077,"title":"Ruby Changed My Life","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/077/vlcsnap-2014-12-23-08h20m15s234-original.png?1422378286","slug":"rubyconf2014-ruby-changed-my-life","recorded_at":"2014-11-18T21:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"When I found Ruby several years ago, I had no idea how strong an influence it would be in my life.\r\n\r\nIt made my life happier and I was eager to share this new found happiness with other developers.\r\n\r\nThen by the way of MagLev - I found the magical world of Smalltalk - and my joy was complete.\r\n\r\nCome hear about this journey, how Ruby.is_a? Smalltalk and appreciate the following quote on another level:\r\n\r\nI always knew that one day Smalltalk would replace Java. I just didn't know it would be called Ruby. -- Kent Beck","post_date":null,"announce_date":null,"host":"youtube","embed_code":"SQUJ3PiY4h8","views":413,"views_last_7":3,"views_last_30":17,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Johnny","last_name":"T","aka_name":null,"twitter_handle":"johnny_t"}]},{"id":5080,"title":"Stress Testing as a Culture","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/080/vlcsnap-2014-12-23-08h29m07s146-original.png?1422378331","slug":"rubyconf2014-stress-testing-as-a-culture","recorded_at":"2014-11-19T18:28:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"If you are working on a serious project, you want it to scale. The thing about scale is, you only focus on it once you really need it. I’m the CTO of an soccer social network based in Brazil. To put it mildly, soccer is big in my country. This summer, we focused our marketing on the World Cup, preparing our application to support as many users as possible. To do that, we had to benchmark and improve, but how could we load test? What tool should we use? Those are just some questions that I'll go through in this talk, that will show youhot to address this challenge so stress test you app.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"b7jqwVxdtcY","views":1571,"views_last_7":7,"views_last_30":39,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"João M. D.","last_name":"Moura","aka_name":null,"twitter_handle":"joaomdmoura"}]},{"id":5061,"title":"Norikra: SQL Stream Processing in Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/061/tagomori_satoshi-original.png?1422378039","slug":"rubyconf2014-norikra-sql-stream-processing-in-ruby","recorded_at":"2014-11-19T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Data streams (ex: logs) are becoming larger, while analytics in (semi-) real time is also becoming more important today. Moreover, there are many non-programmers who wants to write queries in this big data era.\r\n\r\nNorikra is an open source server software that provides \"Stream Processing\" with SQL, written in JRuby, runs on JVM. We can write and add queries for stream easily on Norikra, without any editors, compilers or deployments. I will talk about implementation of Norikra and its application in LINE corporation.","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"5QsIMgGdw8w","views":649,"views_last_7":4,"views_last_30":17,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Tagomori","last_name":"Satoshi","aka_name":null,"twitter_handle":"tagomoris"}]},{"id":5129,"title":"Switch Up: How to Switch Careers to Become a Ruby Engineer","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/129/vlcsnap-2014-12-30-14h10m51s26-original.png?1422376543","slug":"rubyconf2014-switch-up-how-to-switch-careers-to-become-a-ruby-engineer","recorded_at":"2014-11-18T01:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"The transition from working in advertising agencies to becoming a full-time developer was something I never thought I could do. 6 months into it, I found myself working for one of the best Ruby consultancies. There are 8 things that I wish I would have known before jumping head first into a career as a software engineer, especially coming from a non-technical background. You will leave this talk not only feeling inspired to enter the Ruby world as an engineer, but have concrete action items on how to make it a successful transition.","post_date":"2014-12-30T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"nRm-qlxq3Rw","views":502,"views_last_7":4,"views_last_30":32,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Kinsey Ann","last_name":"Durham","aka_name":null,"twitter_handle":"KinseyAnnDurham"}]},{"id":5015,"title":"Madam Sandi Tells Your Future","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/015/sandi_metz-original.png?1422377888","slug":"rubyconf2014-madam-sandi-tells-your-future","recorded_at":"2014-11-18T16:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Life's demands are such that it's easy to get lost in the day-to-day, trapped inside your own private world, expecting today to repeat endlessly and the future to remain a distant, untroubling land. The future is coming, however, whether you are ready or not, and when it does everything will change.\r\n\r\nThis talk is a history lesson that covers 3,000 years of technology. It uses the past to lend perspective to the present and give guidance for the future. It reminds us where we come from and suggests how technology can help us to choose where we’ll go next.","post_date":"2014-12-19T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"JOM5_V5jLAs","views":2976,"views_last_7":19,"views_last_30":99,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Sandi","last_name":"Metz","aka_name":"","twitter_handle":"sandimetz"}]},{"id":4817,"title":"2 + Cats = 4 * Cute: How Math Works in Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/817/chris_hoffman-original.png?1422376522","slug":"rubyconf2014-2-cats-4-cute-how-math-works-in-ruby","recorded_at":"2014-11-18T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Do you know how addition works in Ruby? It's simple right? You just add 2 and 2 and out pops 4. But what if you add 2 to cats? That makes no sense, but how does Ruby know it makes no sense? And what if you had a Really Good Business Reason for adding 2 and cats. To achieve the needed degree of cuteness, you're going to need to be positively cat-like yourself. In this talk you'll learn about the magic of the coerce method, and that can't be coerced into Fixnum isn't a warning, but a dare, and what you can do to make your coworkers, collaborators and future self regret it.","post_date":"2014-12-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"_GIPsLpYmGE","views":964,"views_last_7":1,"views_last_30":12,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Chris","last_name":"Hoffman","aka_name":null,"twitter_handle":"yarmiganosca"}]},{"id":4957,"title":"On The Outside Looking In","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/957/cindy_backman-original.png?1422377492","slug":"rubyconf2014-on-the-outside-looking-in","recorded_at":"2014-11-18T22:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"The view of an outsider – What I have learned over the past 2 years from attending nearly 40 programming conferences on 3 different continents (with most of them being Ruby Conferences) and working on just under 1000 presentations.\r\n\r\nHave you ever felt like you were on the outside...\r\nWhat programming looks like to an outsider\r\nConnections that are created\r\nA better community experience\r\nSuperheroes are human too\r\nWhy an outsider loves the Ruby Community","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"W3TpckhNzuM","views":991,"views_last_7":4,"views_last_30":19,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Cindy","last_name":"Backman","aka_name":null,"twitter_handle":"Cinner"}]},{"id":4823,"title":"The Social Coding Contract","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/823/justin-searls-original.png?1422376645","slug":"rubyconf2014-the-social-coding-contract","recorded_at":"2014-11-19T16:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Social coding revolutionized how we share useful code with others. RubyGems, Bundler, and Github made publishing and consuming code so convenient that our dependencies have become smaller and more numerous. Nowadays, most projects quickly resemble a Jenga tower, with layer upon layer of poorly understood single points of failure.\r\n\r\nAs we celebrate a decade of RubyGems, let's reflect on our relationship with open source. Convenience and ego drive most open source adoption, but these shortsighted motivations raise long-term problems we need to clearly identify if we can ever hope to solve them.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"e_-qV8waPVM","views":2449,"views_last_7":9,"views_last_30":35,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Justin","last_name":"Searls","aka_name":"","twitter_handle":"searls"}]},{"id":5017,"title":"JRuby 9000","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/017/charles_nutter-original.png?1422377929","slug":"rubyconf2014-jruby-9000","recorded_at":"2014-11-18T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"JRuby 9000 is the largest update to the JRuby platform during its lifetime. We will support Ruby 2.1 (or perhaps 2.2) features, replace our execution pipeline with a new optimizing compiler, support true native IO and Process logic, and finally bring character transcoding in line with MRI. At the same time, people are building more and more amazing things with JRuby. In this talk, we'll unveil JRuby 9000 and talk about the future of JRuby and Ruby.","post_date":"2014-12-19T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"CJGVH1XTtSw","views":1156,"views_last_7":15,"views_last_30":62,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Thomas","last_name":"Enebo","aka_name":"","twitter_handle":"tom_enebo"},{"first_name":"Charles","last_name":"Nutter","aka_name":"","twitter_handle":"headius"}]},{"id":4963,"title":"Testing Isn't Enough: Fighting Bugs with Hacks","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/963/paul_gross-original.png?1422377586","slug":"rubyconf2014-testing-isn-t-enough-fighting-bugs-with-hacks","recorded_at":"2014-11-17T23:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Bugs and mess-ups are serious problems in software. Mistakes are inevitable - but the stakes can be high. If you're writing a hospital management system, they can cost lives. In a payments system, they can cost money. Since we can't eliminate bugs, this talk will cover strategies, hacks and monkey patches in Ruby to prevent bugs from leading to disaster. This isn't a traditional testing talk, but rather a thinking outside-of-the-box approach to busting bugs and building more robust software.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"qBt7v5PKHvQ","views":715,"views_last_7":9,"views_last_30":53,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Paul","last_name":"Gross","aka_name":null,"twitter_handle":"pgr0ss"}]},{"id":4827,"title":"The Quiet Programmer","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/827/mark-mcspadden-original.png?1422376703","slug":"rubyconf2014-the-quiet-programmer","recorded_at":"2014-11-19T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Hi, I'm [NAME] and I'm an introvert. But contrary to what you might think, it's not a problem and I am not working on it. In fact, I've embraced it.\r\n\r\nIn this session, we'll explore the strengths of introversion within the realm of programming and software development. We'll discuss how it plays a role in your interactions with other developers, your preferred work environment, and yes, even your code.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"iuZ-iAIw62E","views":1331,"views_last_7":2,"views_last_30":18,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Mark","last_name":"McSpadden","aka_name":null,"twitter_handle":"markmcspadden"}]},{"id":5060,"title":"Rsense Knows Your Code","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/060/eric_west-original.png?1422378016","slug":"rubyconf2014-rsense-knows-your-code","recorded_at":"2014-11-18T22:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Rsense brings the kind of static analysis tooling to Ruby that programmers in other languages take for granted. The kind of tooling I kept hearing was impossible to implement for Ruby. Accurate type inference, code completion, definition finding, and eventually so much more. How about a real refactoring tool, or the ability to find whole classes of bugs without executing the code? This is where Rsense is headed.\r\n\r\nLearn how Rsense does its magic, find out how you can use it to improve your daily coding experience, where it's going next and where you can pitch in to make rsense even better.","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"HMcEEBR0yJY","views":567,"views_last_7":1,"views_last_30":17,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Eric","last_name":"West","aka_name":null,"twitter_handle":"e_dub_kendo"}]},{"id":5059,"title":"Ruby-red onions: Peeling Back Ruby's Layers in C Extensions","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/059/emily_stolfo-original.png?1422371361","slug":"rubyconf2014-ruby-red-onions-peeling-back-ruby-s-layers-in-c-extensions","recorded_at":"2014-11-18T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"The fact that Ruby has different implementations is both strange and powerful. Writing an extension for the language can be a daunting task but there's no better way to get to the heart of what exactly Ruby objects are and the reason for some of the language's quirks.\r\n\r\nIn this talk, we'll use an example of writing a C extension for Ruby to use a third-party C security library. We'll peel back the layers of Ruby objects to deepen our knowledge of MRI and to understand in a little more detail what it really means to write object-oriented code.","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"8klc4R1TvoY","views":416,"views_last_7":2,"views_last_30":8,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Emily","last_name":"Stolfo","aka_name":null,"twitter_handle":"EmStolfo"}]},{"id":4831,"title":"Easy rewrites with ruby and science!","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/831/jesse-toth-original.png?1422376778","slug":"rubyconf2014-easy-rewrites-with-ruby-and-science","recorded_at":"2014-11-17T21:05:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ruby makes it easy to prototype a new data model or codepath in your application and get it into production quickly to test it out. At GitHub, we've built on top of this concept with our open source dat-science gem, which helps measure and validate two codepaths at runtime. This talk will cover how we used this gem and its companion analysis gem to undertake (and complete!) a large-scale rewrite of a critical piece of our Rails app -- the permissions model -- live, side-by-side, and in production.","post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"kgDqUHWVw4A","views":4484,"views_last_7":27,"views_last_30":128,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jesse","last_name":"Toth","aka_name":null,"twitter_handle":"jesseplusplus"}]},{"id":5064,"title":"Lightning Talks","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/064/lightning_talks-original.png?1422378116","slug":"rubyconf2014-lightning-talks","recorded_at":"2014-11-18T23:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Lightning Talks by Many People\r\n\r\n00:00:00 - Vektra\r\n\r\n00:03:45 - Claudio Baccigalupo\r\n\r\n00:07:27 - Richard Schneeman\r\n\r\n00:11:58 - Shannon Skipper\r\n\r\n00:15:34 - Sean Culver\r\n\r\n00:20:36 - Steven Talcott Smith\r\n\r\n00:25:28 - Brandon Rice\r\n\r\n00:30:21 - Alex \r\n\r\n00:34:32 - Phillip Ante\r\n\r\n00:38:26 - Jeramy Couts\r\n\r\n00:42:32 - Ray Hightower\r\n\r\n00:46:33 - Tim Schmelmer\r\n\r\n00:53:05 - Aaron Patterson\r\n\r\n00:58:32 - Bobby Matson\r\n\r\n01:03:17 - Jason Clark\r\n\r\n01:08:25 - Chris Sexton\r\n\r\n01:10:52 - Jonathan Slate\r\n\r\n01:15:05 - Amanda Wagner\r\n\r\n01:20:44 - Costi\r\n\r\n01:27:03 - Colin Kelley\r\n\r\n01:32:01 - Michael Hartl\r\n\r\n01:36:42 - Pamela Assogba\r\n","post_date":"2014-12-21T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"GnUyjPGu5MQ","views":490,"views_last_7":3,"views_last_30":15,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Various","last_name":"Presenters","aka_name":"","twitter_handle":""}]},{"id":5076,"title":"Harnessing other languages to make Ruby better","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/076/vlcsnap-2014-12-22-21h58m04s169-original.png?1422378270","slug":"rubyconf2014-harnessing-other-languages-to-make-ruby-better","recorded_at":"2014-11-18T18:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"What do you do when your Ruby startup takes off and you realise that Ruby might not be best suited for everything? This talk covers our initial attempts to use Ruby as a data analytics platform, and how we ultimately ended up solving the problem using ideas from LISP and ActiveRecord scopes to bring the power and performance of data science languages to Ruby. We will also cover how Ruby can learn from other languages, and why Ruby is still our language of choice.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"-wYAcuWQ0YQ","views":505,"views_last_7":5,"views_last_30":17,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Brendon","last_name":"McLean","aka_name":null,"twitter_handle":"brendon9x"}]},{"id":5074,"title":"Scalable Deployments - How we deploy Rails app to 100+ hosts in a minute","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/074/shota_fukumori-original.png?1422378243","slug":"rubyconf2014-scalable-deployments-how-we-deploy-rails-app-to-100-hosts-in-a-minute","recorded_at":"2014-11-19T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"If you're developing webapps, I guess you deploy sometime using tools like Capistrano. We think existing tools slow for huge apps and a lot of servers.\r\n\r\nWe serves cookpad.com, which is a huge Rails app, and the largest recipe site in Japan. It's backed 120+ app servers. We've used Capistrano + SSH + rsync, but it became a bottleneck, slower and slower, as well as server increases. Our developer have wanted to focus on development. Deployments should be done in short time.\r\n\r\nIn this talk I'll introduce about our new deploy tool Mamiya, and will talk about how we deploy webapp in a minute.","post_date":"2014-12-23T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"Pta7Lr-eskc","views":684,"views_last_7":0,"views_last_30":22,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Shota","last_name":"Fukumori","aka_name":null,"twitter_handle":"sora_h"}]},{"id":4964,"title":"Containerized Ruby Applications with Docker","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/964/laura_frank-original.png?1422377600","slug":"rubyconf2014-containerized-ruby-applications-with-docker","recorded_at":"2014-11-19T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Docker’s lightweight virtualization may supplant our hypervisor-backed VMs at some point in the future, and change the way that tomorrow's Ruby applications are architected, packaged and deployed. Using Docker, your Ruby applications will sit atop an excellent platform for packing, shipping and running low-overhead, isolated execution environments. You will get a brief intro to the Docker ecosystem, get to know the tools and processes needed to create containerized Ruby applications, and learn best practices for interacting with the Docker API from Ruby.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"SGyLjrY3LJo","views":1004,"views_last_7":5,"views_last_30":37,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Laura","last_name":"Frank","aka_name":null,"twitter_handle":"rhein_wein"}]},{"id":5079,"title":"Learning from FP: Simulated Annealing in Haskell and Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/079/vlcsnap-2014-12-23-08h25m46s217-original.png?1422378318","slug":"rubyconf2014-learning-from-fp-simulated-annealing-in-haskell-and-ruby","recorded_at":"2014-11-18T11:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Haskell is a functional programming language that cleanly separates pure algorithms from messy real-world concerns. To learn how it ticks, I've translated an algorithm for Simulated Annealing from Haskell to Ruby. It also gave me an excuse to play with ruby-processing, a toolkit for graphics processing ;). Come learn about Functional Programming and how it can make your Ruby better!","post_date":"2014-12-23T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"GjyE3tKscSw","views":575,"views_last_7":7,"views_last_30":30,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Josh","last_name":"Szmajda","aka_name":null,"twitter_handle":"jszmajda"}]},{"id":5072,"title":"Letting Concurrency Help You Today","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/072/vlcsnap-2014-12-22-21h57m54s70-original.png?1422378229","slug":"rubyconf2014-letting-concurrency-help-you-today","recorded_at":"2014-11-17T21:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ruby has never been renowned for its performance. We choose to love Ruby for its more admirable traits, like simplicity and expressiveness. But it turns out that we can have the best of both worlds by kicking the single-threaded model to the curb and using tried and true concurrency abstractions.\r\n\r\nWe will take a look at the building blocks Ruby offers for concurrency and how Rubyists have used these to build scalable, performant libraries just dying to be used. You’ll walk away with an understanding of concurrency and how you can leverage it in your applications today.","post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"F7dC3vTpE6I","views":766,"views_last_7":13,"views_last_30":46,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Richard","last_name":"Bishop","aka_name":"","twitter_handle":"rbondev"}]},{"id":4821,"title":"My Little C Extension: Lego Robots are Magic","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/821/brandon-hays-original.png?1422376615","slug":"rubyconf2014-my-little-c-extension-lego-robots-are-magic","recorded_at":"2014-11-18T22:30:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"I didn't know squat about C or building extensions in Ruby. But I did want a Ruby-controlled Lego Mindstorms robot to get kids excited about Ruby. We'll dive into the basics of building C extensions, build a Ruby DSL to teach kids to drive cool Lego robots, and show off the amazing things you can do when you pull up Ruby's floorboards and look at the actually-not-too-scary C code underneath.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"uOsKIyD_RCo","views":1703,"views_last_7":5,"views_last_30":48,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Brandon","last_name":"Hays","aka_name":null,"twitter_handle":"tehviking"}]},{"id":4865,"title":"Ruby After Rails","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/865/ernie_miller-original.png?1422373250","slug":"rubyconf2014-ruby-after-rails","recorded_at":"2014-11-18T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"What happens to Ruby when Rails dies?\r\n\r\nRuby rode the Rails rocketship to worldwide renown. While a handful of us were writing Ruby code before Rails came along, most of us owe Rails a debt of gratitude for taking Ruby mainstream, allowing us to make a living writing code in a language we love.\r\n\r\nBut opinions codified in Rails are falling out of favor. We're not writing apps that do heavy server-side rendering. Our apps have complex domain logic that grates against \"The Rails Way.\"\r\n\r\nIs that it, then? Has Ruby entered its twilight years?","post_date":"2014-12-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"EgjJYkuV0Sc","views":1372,"views_last_7":10,"views_last_30":56,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Ernie","last_name":"Miller","aka_name":"","twitter_handle":"erniemiller"}]},{"id":5082,"title":"Ruby Performance Secrets and How to Uncover Them","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/082/Screen_Shot_2014-12-23_at_7.54.43_PM-original.png?1422378361","slug":"rubyconf2014-ruby-performance-secrets-and-how-to-uncover-them","recorded_at":"2014-11-18T21:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Did you know that inject() and especially all?() iterator nested in another loop can really slow you down? Or that bigdecimal and string comparison is unbelievably slow in Ruby \u003c 2.0? Or that parsed CSV is 13x larger in memory than on disk? Want to know these and other performance hints with in-depth explanations? Want to learn how to use profilers to find what's slow by yourself? Then this session is for you.","post_date":"2014-12-23T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"lAI_uYQwh4s","views":595,"views_last_7":7,"views_last_30":43,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Alexander","last_name":"Dymo","aka_name":null,"twitter_handle":"alexander_dymo"}]},{"id":5067,"title":"Overcoming Our Obsession with Stringly-Typed Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/067/vlcsnap-2014-12-22-13h43m01s102-original.png?1422378168","slug":"rubyconf2014-overcoming-our-obsession-with-stringly-typed-ruby","recorded_at":"2014-11-17T21:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"We use Strings. A lot. We use them for pretty much everything that isn't a number (it's jokingly referred to as \"stringly-typed\").\r\n\r\nIt ends up creating unnecessary complexity in our applications, making the boundaries between classes and modules hard to understand.\r\n\r\nWhat if we used Ruby's power to create richer data types? These types would define clearer boundaries in our system, and make our code much easier to understand.","post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"7Obobjq8g_U","views":907,"views_last_7":11,"views_last_30":42,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Dave","last_name":"Copeland","aka_name":null,"twitter_handle":"davetron5000"}]},{"id":5066,"title":"Enumerable for Fun \u0026 Profit","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/066/vlcsnap-2014-12-22-13h42m48s226-original.png?1422378155","slug":"rubyconf2014-enumerable-for-fun-profit","recorded_at":"2014-11-17T19:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Let's peek under the hood of the the Enumerable module, a goldmine of examples of the power and flexibility of Ruby. Although some of Enumerable's methods are familiar from workhorse Ruby data structures such as Array and Hash, there are tons of hidden gems, including cycle, lazy, partition, and grep. Mastering the ins \u0026 outs of Enumerable will save you time, avoid bugs, and help you write clearer and more concise code. Join the author of the Ruby on Rails Tutorial on a journey through one of the most captivating and illuminating modules in Ruby's Standard Library.","post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"y4V9qVTkj3c","views":1902,"views_last_7":55,"views_last_30":162,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Michael","last_name":"Hartl","aka_name":null,"twitter_handle":""}]},{"id":4962,"title":"Future-Proofing Your 3rd Party Integrations","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/962/jeffrey_matthias-original.png?1422377575","slug":"rubyconf2014-future-proofing-your-3rd-party-integrations","recorded_at":"2014-11-17T21:05:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"It's 2015... your stakeholders have decided that PayPal is out and Stripe is in. Fortunately, you're a planner. You have all of your PayPal interactions isolated in an adapter gem and your interface is clearly defined, easy to re-implement and enforce. Rewriting your adapter isn't small, but it is surmountable and can be estimated accurately so it won't lead to surprises. You win.\r\n\r\nThis talk will cover a collection of best practices for defining, enforcing and test-driving the adapter for your 3rd party service to provide easier flexibility in the future.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"LqZU2Q5nFRM","views":781,"views_last_7":4,"views_last_30":24,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jeffrey","last_name":"Matthias","aka_name":null,"twitter_handle":"idlehands"}]},{"id":4833,"title":"Roda: The Routing Tree Web Framework","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/833/jeremy_evans-original.png?1422376811","slug":"rubyconf2014-roda-the-routing-tree-web-framework","recorded_at":"2014-11-17T23:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Roda is a new Ruby web framework designed around the concept of a routing tree. Roda gives you the simplicity of Sinatra for simple cases, while being able to scale well to handle larger, complex cases. It provides performance very close to a pure Rack application, with a flexible plugin system powerful enough to handle almost any needs. Come learn about routing trees, how they make web development better, and how Roda adds a twist on the routing tree concept to avoid the scope pollution problem inherent in many other Ruby web frameworks.","post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"W8zglFFFRMM","views":1449,"views_last_7":12,"views_last_30":53,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jeremy","last_name":"Evans","aka_name":"","twitter_handle":"jeremyevans0"}]},{"id":5065,"title":"Isomorphic App Development with Ruby and Volt","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/065/ryan_stout-original.png?1422378137","slug":"rubyconf2014-isomorphic-app-development-with-ruby-and-volt","recorded_at":"2014-11-19T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"As single page apps become common, more and more of our logic becomes duplicated between the front and back-end. We also spend more time writing API glue code to move data between each side. With isometric development you can remove the boilerplate of web development and the cognitive load of switching between languages.\r\n\r\nExisting isomorphic web frameworks run JavaScript on the server. Volt lets developers write their app code in ruby and have it run both in the browser and on the server. Data is automatically synchronized to remove the need for REST API development.","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"7i6AL7Walc4","views":1150,"views_last_7":18,"views_last_30":106,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Ryan","last_name":"Stout","aka_name":null,"twitter_handle":"ryanstout"}]},{"id":5098,"title":"Ruby Idioms You're Not Using Yet","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/098/Screen_Shot_2014-12-26_at_10.37.58_AM-original.png?1422377113","slug":"rubyconf2014-ruby-idioms-you-re-not-using-yet","recorded_at":"2014-11-17T23:00:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Idioms are some of the smallest patterns that we use in our programming languages. Learning the idioms of a language helps you more quickly understand commonly used patterns. Over time, some idioms fall out of favor, and new idioms are developed and adopted.\r\n\r\nIn this talk, we'll explore a few idioms that are relatively new to the Ruby community. These include:\r\n\r\nModule factory\r\nTag module\r\nCircuit breaker\r\nFetch with default block","post_date":"2014-12-26T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"hc_wtllfKtQ","views":866,"views_last_7":9,"views_last_30":75,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Craig","last_name":"Buchek","aka_name":null,"twitter_handle":"CraigBuchek"}]},{"id":5128,"title":"5 Things I Wish Someone Had Told Me About Programming Before I Started","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/128/vlcsnap-2014-12-29-12h04m27s215-original.png?1422378629","slug":"rubyconf2014-5-things-i-wish-someone-had-told-me-about-programming-before-i-started","recorded_at":"2014-11-18T00:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"There's more to being a successful developer than simply being great at programming. The gotchas that slow us down or trip us up are often outside of the code we write, manifesting instead in our process or how we work with our peers. Whether you're new to programming or a veteran of many projects, these 5 things can improve your code, your career, and your team, and is a refresher course on what goes into the day-to-day, reminding us to have some empathy for individuals new to our community.","post_date":"2014-12-29T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"bZOnbBJW3a8","views":1261,"views_last_7":4,"views_last_30":46,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Kerri","last_name":"Miller","aka_name":null,"twitter_handle":"kerrizor"}]},{"id":5081,"title":"Benchmarking Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/081/Untitled1-original.png?1422373324","slug":"rubyconf2014-benchmarking-ruby","recorded_at":"2014-11-19T19:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Testing is firmly ingrained in our culture, and many of us rely on a network of services to test, evaluate and profile our code. But what about benchmarking?\r\n\r\nLearn tips and tricks about how to approach benchmarking and the variety of gems that are available. Learn about tools to help determine algorithmic complexity of your code, as well as how this information can help you make development choices. Learn how to properly set up your benchmarking experiments to ensure that the results you receive are accurate. More importantly, discover that benchmarking can be both fun and easy.","post_date":"2014-12-23T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"XlEZB3oilME","views":1370,"views_last_7":13,"views_last_30":101,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Davy","last_name":"Stevenson","aka_name":null,"twitter_handle":"davystevenson"}]},{"id":4825,"title":"Eastward Ho! A Clear Path Through Ruby With OO","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/825/jim-gay-original.png?1422376673","slug":"rubyconf2014-eastward-ho-a-clear-path-through-ruby-with-oo","recorded_at":"2014-11-19T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Messy code often begins with a simple \"if\". Continuing down that path is a road to ruin, but there's a simple way to avoid it. East-oriented Code is an approach that helps you follow Tell, Don't Ask. It guides you away from Feature Envy and toward better encapsulation. See before and after code and walk through easy to repeat steps that will make your Ruby programs better and easier to maintain.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"kXcrClJcfm8","views":8865,"views_last_7":58,"views_last_30":369,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jim","last_name":"Gay","aka_name":null,"twitter_handle":"saturnflyer"}]},{"id":5070,"title":"Opening Keynote","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/070/vlcsnap-2014-12-22-15h16m55s117-original.png?1422378205","slug":"rubyconf2014-opening-keynote","recorded_at":"2014-11-17T18:00:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":null,"post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"85ct6jOvVPI","views":3663,"views_last_7":17,"views_last_30":115,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Yukihiro 'Matz'","last_name":"Matsumoto","aka_name":"","twitter_handle":"yukihiro_matz"}]},{"id":5100,"title":"Your Bright Metaprogramming Future: Mistakes You'll Make (and How to Fix Them)","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/100/Screen_Shot_2014-12-26_at_10.38.45_AM-original.png?1422378491","slug":"rubyconf2014-your-bright-metaprogramming-future-mistakes-you-ll-make-and-how-to-fix-them","recorded_at":"2014-11-18T01:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ruby's full of nice little metaprogramming tricks. Learning a new one's always the same cycle: 1. scared \u0026 tentative; 2. drunk on power; 3. woefully repentant; 4. mature \u0026 reasonable. Using my own history (of poor choices), I'll take you through stages 1-4 for: mazes of twisty little send calls, all alike! replacing def with method_missing! hook method indirection \"magic!\" Ill-timed define_methods! Sure, you could skip to the end - stage 4 is mostly \"obey SRP; extract service objects\" and \"anonymous module inclusion's your BFF\" - but getting there is half the point and all the fun.","post_date":"2014-12-26T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"7rN6ehNrtfc","views":649,"views_last_7":6,"views_last_30":28,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Betsy","last_name":"Haibel","aka_name":null,"twitter_handle":"betsythemuffin"}]},{"id":5068,"title":"An Introduction to Spies in RSpec","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/068/vlcsnap-2014-12-22-13h42m56s51-original.png?1422378184","slug":"rubyconf2014-an-introduction-to-spies-in-rspec","recorded_at":"2014-11-17T22:05:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Spies are a relatively new feature in RSpec. In this tutorial-style talk: we'll look at what spies are, how spies work in RSpec and how one can write better tests with spies. We'll work through some of examples of writing new tests with spies, improving old tests with spies and the reasons why spying is a useful tool for your testing practice.\r\n\r\nIf you're new to RSpec and looking for ways to improve your testing practice, understand the library better or just ask some questions, this session will be great for you.","post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"kiHdUU73D14","views":833,"views_last_7":3,"views_last_30":35,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Sam","last_name":"Phippen","aka_name":null,"twitter_handle":"samphippen"}]},{"id":4824,"title":"Going the Distance","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/824/richard-schneeman-original.png?1422376658","slug":"rubyconf2014-going-the-distance","recorded_at":"2014-11-19T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"If you've ever misspelled a word while searching on Google, you've benefitted from decades of distance algorithm development. In this talk we'll break down some popular distance measurements and see how they can be implemented in Ruby. We'll look at real world applications with some live demos. It won't matter if you get your kicks \"Hamming\" it up, if you drink your coffee in a \"Levenshtein\", or if you're new to Ruby: this talk is Rated R, for \"all Rubyists\". You'll be guaranteed to walk away with O(n^n) expectations met.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"PcINjHjIllk","views":1030,"views_last_7":3,"views_last_30":13,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Richard","last_name":"Schneeman","aka_name":null,"twitter_handle":"schneems"}]},{"id":4820,"title":"Sweaters as a Service","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/820/amy-wibowo-original.png?1422376594","slug":"rubyconf2014-sweaters-as-a-service","recorded_at":"2014-11-18T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"In the 1980's, Nintendo had plans for a knitting add-on to the NES, with an interface that resembled Mariopaint, but with patterned sweaters as output. Sadly, this product never saw the light of day. Devastated on hearing this, a group of Airbnb engineers (who knew nothing about machine knitting) set out to hack a knitting machine from the 1980's to be computer-controlled. Learn about how we wrote our own yarn printer API in ruby and printed our first doge meme in yarn. And watch us as we send knit requests to our yarn server, and behold as it knits ugly sweaters from those images!","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"HKZ6nDEMpyc","views":1637,"views_last_7":5,"views_last_30":12,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Amy","last_name":"Wibowo","aka_name":null,"twitter_handle":"sailorhg"}]},{"id":4828,"title":"Questions for Matz","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/828/questions-for-matz-original.png?1422376734","slug":"rubyconf2014-questions-for-matz","recorded_at":"2014-11-19T22:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":null,"post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"_zoG2i7pMxg","views":1386,"views_last_7":2,"views_last_30":19,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Yukihiro 'Matz'","last_name":"Matsumoto","aka_name":"","twitter_handle":"yukihiro_matz"},{"first_name":"Evan","last_name":"Phoenix","aka_name":"","twitter_handle":"evanphx"}]},{"id":5096,"title":"Real World Ruby Performance at Scale","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/096/vlcsnap-2014-12-24-09h37m40s94-original.png?1422378450","slug":"rubyconf2014-real-world-ruby-performance-at-scale","recorded_at":"2014-11-19T21:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Large scale and fast production Ruby applications are not a myth. As we've continued to scale out our infrastructure and our application, we've been able to keep things fast and reliable. We do this by building and using tools that take advantage the great improvements that have come in Ruby 2. I'd like to share some of the lessons we've learned in scaling our app as well as show off the latest and greatest in open source performance tooling.","post_date":"2014-12-24T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"qlS3yr1oncQ","views":687,"views_last_7":8,"views_last_30":32,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Aaron","last_name":"Quint","aka_name":null,"twitter_handle":"aq"}]},{"id":4818,"title":"A Partial-Multiverse Model of Time Travel for Debugging","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/818/brock-wilcox-original.png?1422376556","slug":"rubyconf2014-a-partial-multiverse-model-of-time-travel-for-debugging","recorded_at":"2014-11-18T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ever type 'next' into your debugger and then realize you should have used 'step'? Or perhaps invoked a method that you wish you could take back? Regret no more! Just turn the clock back a few ticks and begin again! With only a few restrictions and side-effects we will learn how to construct and use a time machine.\r\n\r\nWARNING: Time travel may cause zombies.","post_date":"2014-12-03T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"EpYMRd1ZWDM","views":941,"views_last_7":6,"views_last_30":24,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Brock","last_name":"Wilcox","aka_name":null,"twitter_handle":null}]},{"id":5014,"title":"6 Reasons Jubilee Could be a Rubyist's New Best Friend","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/014/forest_change-original.png?1422377866","slug":"rubyconf2014-6-reasons-jubilee-could-be-a-rubyist-s-new-best-friend","recorded_at":"2014-11-19T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Do you do web development in Ruby? Have you been forced to go to node or other technologies just for concurrency/websockets etc. Do miss your gems, and tire of functionality you have to implement from scratch? Do you hate javascript?\r\n\r\nWell no need to switch languages/platforms, Jubilee could be your new best friend.\r\n\r\nJubilee, a rack server on top of Vert.x gives you\r\n\r\nConcurrency\r\nSpeed\r\nEasy Websockets support\r\nShared Memory\r\nAccess to the JVM ecosystem\r\nAbility to reuse your existing Ruby knowledge and gems\r\n\"Say Hello to your new friend\" - Al Pacino","post_date":"2014-12-19T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"FFR0G89WXI8","views":877,"views_last_7":10,"views_last_30":34,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Forrest","last_name":"Chang","aka_name":null,"twitter_handle":"fkchang2000"}]},{"id":4960,"title":"Rapidly Mapping JSON/XML API Schemas in Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/960/adam_cuppy-original.png?1422377546","slug":"rubyconf2014-rapidly-mapping-json-xml-api-schemas-in-ruby","recorded_at":"2014-11-17T18:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Whether you are using a 3rd party or custom JSON API service, integration into an existing application can be time consuming: Where do you start? How can you build an object relational model that can adapt to changes in the schema?\r\n\r\nIn this talk we'll start with an existing JSON schema and build a Ruby adapter to provide a pure Ruby interface to: consume, modify and re-export that schema into JSON and XML.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"1K0Pt0o9F7w","views":1226,"views_last_7":13,"views_last_30":84,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Adam","last_name":"Cuppy","aka_name":null,"twitter_handle":"AdamCuppy"}]},{"id":5018,"title":"Incremental GC for Ruby Interpreter","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/018/koichi_sasada-original.png?1422377962","slug":"rubyconf2014-incremental-gc-for-ruby-interpreter","recorded_at":"2014-11-18T17:25:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"In this presentation, I will talk about incremental GC algorithm for Ruby interpreter.\r\n\r\nRuby 2.1 has Generational GC algorithm, which improves GC performance dramatically. However, long application pause time problem on major GC is not solved.\r\n\r\nTo overcome this problem, we Matz team at Heroku, Inc. implemented a well-known incremental GC algorithm into MRI/CRuby interpreter to reduce application pause time without any compatibility issues, with our \"write-barrier-unprotected\" objects technique. In this talk, I will explain the algorihtnm, implementation and evaluation results about new GC.","post_date":"2014-12-19T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"4UO60ocw52w","views":546,"views_last_7":2,"views_last_30":14,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Koichi","last_name":"Sasada","aka_name":"","twitter_handle":"koichisasada"}]},{"id":5063,"title":"Nobody Knows Nobu","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/063/zachary_scott-original.png?1422378087","slug":"rubyconf2014-nobody-knows-nobu","recorded_at":"2014-11-19T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Nobuyoshi Nakada is the most prolific contributor to Ruby. He is the all time leader in commits to the CRuby source code. With over 10,000 commits, he leads second place by double the number of commits. Leading to his psuedonym \"Patch Monster\".\r\n\r\nAllow me to introduce you to the man, the myth, and the legend that is nobu.\r\n\r\nYou will learn the true story of how nobu came to be, and witness exactly how he earned that psuedonym and why everyone loves nobu.\r\n\r\nWe will also show you what it takes to make it in ruby-core using nobu as an example.","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"yqyIi0pwRO4","views":458,"views_last_7":1,"views_last_30":10,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Zachary","last_name":"Scott","aka_name":"","twitter_handle":"_zzak"}]},{"id":5071,"title":"Promises in Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/071/vlcsnap-2014-12-22-21h57m59s115-original.png?1422378218","slug":"rubyconf2014-promises-in-ruby","recorded_at":"2014-11-18T07:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Sequential workflows are easy to write (top down), but hard to write well. State machine workflows start to feel hacky, when complex; presenter patterns can be very heavy. Promises are a beautiful way to define and execute progressive routines while allowing access to independent steps for things like logging, exception handling, and picking up where you left off.","post_date":"2014-12-22T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"hDd6DCDoOs8","views":553,"views_last_7":13,"views_last_30":76,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Dinshaw","last_name":"Gobhai","aka_name":null,"twitter_handle":"tallfriend"}]},{"id":4826,"title":"A Lever for the Mind","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/826/tom_stuart-original.png?1422376684","slug":"rubyconf2014-a-lever-for-the-mind","recorded_at":"2014-11-19T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Our brains are great at social interaction and pattern matching, but terrible at reasoning about the complicated non-human systems which dominate our world. Abstraction is the adapter between the fearsome complexity of the universe and our simple primate minds; when the real world is too intricate for us to manipulate directly, abstraction gives us big friendly levers to pull instead.\r\n\r\nI’ll explain how this single powerful idea underlies computers, mathematics, language and everything else we rely on in our daily work as computer programmers, and then show you how to use it effectively.","post_date":"2014-12-02T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"tJkoHFjoMuk","views":4457,"views_last_7":18,"views_last_30":85,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Tom","last_name":"Stuart","aka_name":"","twitter_handle":"tomstuart"}]},{"id":4834,"title":"Chat Robots Next Level Tooling","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/834/ole_michaelis-original.png?1422376843","slug":"rubyconf2014-chat-robots-next-level-tooling","recorded_at":"2014-11-18T00:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Developers are lazy! So we are great in creating tooling for our daily work. But it has its weaknesses, we are creating a tons of scripts on our local maschine, sometimes we share them via git or other vcs systems. But all over all this tooling sucks when it comes to collaboration. We developers also love hanging out in chat rooms like campfire or jabber.\r\n\r\nWhy not combine this via chat robots. Our tooling would be available to everyone without installing wired shell scripts plus we can get rid if questions like:\r\n\r\nDo you have the deploy lock?","post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"_XagO-YkD1Q","views":989,"views_last_7":7,"views_last_30":28,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Ole","last_name":"Michaelis","aka_name":null,"twitter_handle":"CodeStars"}]},{"id":5097,"title":"Strong Duck Type Driven Development","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/097/vlcsnap-2014-12-24-09h38m13s163-original.png?1422378463","slug":"rubyconf2014-strong-duck-type-driven-development","recorded_at":"2014-11-17T22:05:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"As a language, Ruby plays fast and loose with the type system. Developers rely on duck typing to check that the things they want to do with an object are permissible. Whilst this freedom makes writing code frictionless and often a whole lot of fun, it doesn't always scale up well to writing larger systems.\r\n\r\nI can't promise that strong duck typing - adding automated checking to inter-object interfaces - will make writing complex systems easy but it will help you think about how to structure code in new ways and bring some of the lessons learned from other languages to the Ruby community.","post_date":"2014-12-24T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"rMbx5FrqY4U","views":744,"views_last_7":9,"views_last_30":35,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"John","last_name":"Cinnamond","aka_name":null,"twitter_handle":"jcinnamond"}]},{"id":4959,"title":"Going Evergreen","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/959/kane_bacci-original.png?1422377524","slug":"rubyconf2014-going-evergreen","recorded_at":"2014-11-17T22:00:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Consultants divide projects between greenfield and brownfield projects, and talk about this evolution from green to brown as inevitable. It's not true. Large evolving software projects can stay easy to change, easy to grow, easy to reimagine throughout their long lives. This talk explores the code and social practices that make this kind of project succeed.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"SziNSMP1xaM","views":558,"views_last_7":1,"views_last_30":10,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Kane","last_name":"Baccigalupi","aka_name":"","twitter_handle":"rubyghetto"}]},{"id":4830,"title":"It's so quiet. Let's make music.","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/830/loren-segal-original.png?1422376766","slug":"rubyconf2014-it-s-so-quiet-let-s-make-music","recorded_at":"2014-11-17T20:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ruby is used for a lot of things, but for some reason, only a few people are using it for music. In a language that is meant to make programming fun, the lack of such creative code is scary. Let's fix the current landscape by learning how to use the tools available in Ruby (and some not) to let those creative juices flow. We will be focusing on how to build sounds from the ground up (the powerful amplitude, and the majestic waveform), so you don't need any prior audio wizardry. Just bring yourself and a Ruby console and we just might create some beautiful music in a beautiful language.","post_date":"2014-12-05T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"oRt7rVlnPqk","views":1457,"views_last_7":5,"views_last_30":31,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Loren","last_name":"Segal","aka_name":"","twitter_handle":"lsegal"}]},{"id":4866,"title":"Programming, Education, and the American Dream","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/866/liz_abinante-original.png?1422377129","slug":"rubyconf2014-programming-education-and-the-american-dream","recorded_at":"2014-11-18T20:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"The learn to code movement has popularized the idea that coding is a skill everyone can and should learn. It's the American dream: learn the desirable skill and you'll succeed financially. Those who master the skill and achieve the goals are held up as prime examples of just how easy it was. But if it was that easy, why are there so few victors encouraging hoards of hopefuls? I'll discuss the history of the American Dream, how new programming education endeavors have repackaged it, and how the lack of awareness and analysis of this privileged rhetoric is damaging our culture and workforce.","post_date":"2014-12-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"_5zXjOEeRfE","views":1909,"views_last_7":4,"views_last_30":25,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Liz","last_name":"Abinante","aka_name":null,"twitter_handle":"feministy"}]},{"id":5075,"title":"A World Without Assignment","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/075/vlcsnap-2014-12-22-21h58m10s225-original.png?1422378259","slug":"rubyconf2014-a-world-without-assignment","recorded_at":"2014-11-18T19:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"In Ruby, assignment is our primary tool. By contrast, functional programming makes much less use of assignment and mutation. Instead techniques like function composition, recursion, and anonymous functions are used.\r\n\r\nDespite being OO, Ruby accommodates pure functional approaches. This talk will demonstrate how tasks can be accomplished without assignment. Ruby and Scheme will be used for examples. I'll also discuss some of the great resources available for those interested in digging deeper into functional programming.","post_date":"2014-12-23T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"-7RR27bR0_E","views":808,"views_last_7":3,"views_last_30":27,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Aja","last_name":"Hammerly","aka_name":"","twitter_handle":"thagomizer_rb"}]},{"id":5062,"title":"Template Engines in Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/062/akira_matsuda-original.png?1422378061","slug":"rubyconf2014-template-engines-in-ruby","recorded_at":"2014-11-19T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"HTML template engine is one of the most important library to build a web application. But who actually knows how it works? Who can explain how the engine parses the given template and finally composes the HTML body?\r\n\r\nIn this session, I will dig into implementation details of several Ruby libraries such as ERB, Haml, Slim, Tilt, Temple, etc. and give you a quick tour into the world of template engines!","post_date":"2014-12-22T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"ldDZggzePkk","views":2974,"views_last_7":16,"views_last_30":84,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Akira","last_name":"Matsuda","aka_name":"","twitter_handle":"a_matsuda"}]},{"id":4961,"title":"Building Your API for Longevity","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/961/mike_stowe-original.png?1422377559","slug":"rubyconf2014-building-your-api-for-longevity","recorded_at":"2014-11-17T20:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"One of the greatest challenges to developing an API is ensuring that your API lasts. After all, you don't want to have to release and manage multiple versions of your API just because you weren't expecting users to use it a certain way, or because you didn't anticipate far enough down the roadmap. In this session we'll talk about the challenge of API Longevity, as well as ways to increase your API lifecycle including having a proper mindset, careful design, agile user experience and prototyping, best design practices including hypermedia, and the challenge of maintaining persistence.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"8U7JoDfj3wM","views":1175,"views_last_7":8,"views_last_30":60,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Mike","last_name":"Stowe","aka_name":null,"twitter_handle":"mikegstowe"}]},{"id":4958,"title":"Affordances in Programming Languages","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/958/randy_coulman-original.png?1422377511","slug":"rubyconf2014-affordances-in-programming-languages","recorded_at":"2014-11-18T00:10:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"A good design communicates the intended use of the object. In the physical world, this communication is accomplished by \"affordances\" as discussed by Donald Norman in \"The Psychology of Everyday Things\".\r\n\r\nProgramming languages also have affordances, and they influence the kinds of solutions we develop. The more languages we know, the more we \"expand our design space\" so that we can come up with better solutions to the problems we face every day.\r\n\r\nWe will look at a few example problems and show how they can be solved using the affordances provided by different languages.","post_date":"2014-12-18T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"fjH1DCa56Co","views":437,"views_last_7":6,"views_last_30":18,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Randy","last_name":"Coulman","aka_name":"","twitter_handle":"randycoulman"}]},{"id":4867,"title":"Polishing Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/867/olivier_lacan-original.png?1422377149","slug":"rubyconf2014-polishing-ruby","recorded_at":"2014-11-18T18:20:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"There are gems out there solving very common problems that could easily be contributed back to Ruby itself. Suggesting a new Ruby feature isn't as daunting as it sounds. As long as you're diligent, you too can push ruby forward.","post_date":"2014-12-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"iCRAalcAxQ0","views":772,"views_last_7":1,"views_last_30":84,"license":"cc-by-sa-3.0","attribution":"","presenters":[{"first_name":"Olivier","last_name":"Lacan","aka_name":"","twitter_handle":"olivierlacan"}]},{"id":4868,"title":"'Good Luck With That' : Tag Teaming Civic Data","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/004/868/liz_rush-original.png?1422377179","slug":"rubyconf2014-good-luck-with-that-tag-teaming-civic-data","recorded_at":"2014-11-18T21:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"In this end-to-end discussion about the challenges with civic data, from no-documentation \u0026 incomplete government code to figuring out how to scale data-driven SOA, we'll show you how two Ruby newbies managed to create an awesomely useful parking app in just four weeks. For those new to coding, or experienced devs looking to work with civic data, we'll show you our roadmap as well as what we learned pairing as two junior developers just starting out in the big bad world of programming.","post_date":"2014-12-16T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"s-yjPnJwwiE","views":881,"views_last_7":6,"views_last_30":17,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Liz","last_name":"Rush","aka_name":null,"twitter_handle":"lizmrush"},{"first_name":"Hsing-Hui","last_name":"Hsu","aka_name":"","twitter_handle":"SomanyHs"}]},{"id":5099,"title":"Deoptimizing Ruby","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/099/Screen_Shot_2014-12-26_at_10.38.26_AM-original.png?1422378476","slug":"rubyconf2014-deoptimizing-ruby","recorded_at":"2014-11-18T00:15:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Ruby is notoriously difficult to optimize, but there is a solution: deoptimization. This means jumping from compiled code back to an interpreter, and it allows Ruby implementations to take shortcuts, make guesses and pretend Ruby is simpler than it is, but at the same time still be ready to handle the full language if it’s needed.\r\n\r\nYou’ve seen talks about what makes Ruby slow: monkey patching, bindings, set_trace_func, object space \u0026 so on. We’ll show how with a Ruby implementation using deoptimization, such as JRuby+Truffle, you can use these features without any runtime overhead at all.","post_date":"2014-12-26T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"z-YVygbDHLE","views":2827,"views_last_7":8,"views_last_30":80,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Chris","last_name":"Seaton","aka_name":null,"twitter_handle":"ChrisGSeaton"}]},{"id":5069,"title":"TDD For Your Soul: Virtue and Software Engineering","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/005/069/vlcsnap-2014-12-22-13h42m52s7-original.png?1422378195","slug":"rubyconf2014-tdd-for-your-soul-virtue-and-software-engineering","recorded_at":"2014-11-17T23:00:00.000Z","event":"Ruby Conference 2014","rating":"Everyone","abstract":"Software engineering pushes us to our limits, not only of cognition, but, perhaps surprisingly, of character. Using the cardinal virtues as a framework, we can see that developers need courage to learn, temperance to prioritize goals, a sense of justice by which to discern, and wisdom to act. By being honest about where we lack virtue, and implementing steps to develop character, we can perform TDD on ourselves. This process can help us grow not only as coders, but as human beings.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"VxLkhCx2I1Q","views":729,"views_last_7":7,"views_last_30":45,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Abraham","last_name":"Sangha","aka_name":"","twitter_handle":"abrahamsangha"}]}]
